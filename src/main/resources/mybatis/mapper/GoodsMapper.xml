<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lks.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.lks.pojo.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="sort_id" jdbcType="INTEGER" property="sortId" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="total_inventory" jdbcType="INTEGER" property="totalInventory" />
    <result column="remnant_inventory" jdbcType="INTEGER" property="remnantInventory" />
    <result column="out_inventory" jdbcType="INTEGER" property="outInventory" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="good_type" jdbcType="INTEGER" property="goodType" />
    <result column="full_title" jdbcType="VARCHAR" property="fullTitle" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="long_code" jdbcType="VARCHAR" property="longCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lks.pojo.GoodsWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, org_id, title, img_url, sort_id, is_delete, add_time, update_time, goods_no, 
    sell_price, category_id, view_count, market_price, total_inventory, remnant_inventory, 
    out_inventory, material_code, good_type, full_title, is_new, long_code
  </sql>
  <sql id="Blob_Column_List">
    content, details
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lks.pojo.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lks.pojo.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lks.pojo.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lks.pojo.GoodsWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods (org_id, title, img_url, 
      sort_id, is_delete, add_time, 
      update_time, goods_no, sell_price, 
      category_id, view_count, market_price, 
      total_inventory, remnant_inventory, out_inventory, 
      material_code, good_type, full_title, 
      is_new, long_code, content, 
      details)
    values (#{orgId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, 
      #{sortId,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{goodsNo,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DECIMAL}, 
      #{categoryId,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, #{marketPrice,jdbcType=DECIMAL}, 
      #{totalInventory,jdbcType=INTEGER}, #{remnantInventory,jdbcType=INTEGER}, #{outInventory,jdbcType=INTEGER}, 
      #{materialCode,jdbcType=VARCHAR}, #{goodType,jdbcType=INTEGER}, #{fullTitle,jdbcType=VARCHAR}, 
      #{isNew,jdbcType=BIT}, #{longCode,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{details,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lks.pojo.GoodsWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orgId != null">
        org_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="sortId != null">
        sort_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="goodsNo != null">
        goods_no,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="totalInventory != null">
        total_inventory,
      </if>
      <if test="remnantInventory != null">
        remnant_inventory,
      </if>
      <if test="outInventory != null">
        out_inventory,
      </if>
      <if test="materialCode != null">
        material_code,
      </if>
      <if test="goodType != null">
        good_type,
      </if>
      <if test="fullTitle != null">
        full_title,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="longCode != null">
        long_code,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="details != null">
        details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        #{sortId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNo != null">
        #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalInventory != null">
        #{totalInventory,jdbcType=INTEGER},
      </if>
      <if test="remnantInventory != null">
        #{remnantInventory,jdbcType=INTEGER},
      </if>
      <if test="outInventory != null">
        #{outInventory,jdbcType=INTEGER},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null">
        #{goodType,jdbcType=INTEGER},
      </if>
      <if test="fullTitle != null">
        #{fullTitle,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="longCode != null">
        #{longCode,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lks.pojo.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sortId != null">
        sort_id = #{record.sortId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsNo != null">
        goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalInventory != null">
        total_inventory = #{record.totalInventory,jdbcType=INTEGER},
      </if>
      <if test="record.remnantInventory != null">
        remnant_inventory = #{record.remnantInventory,jdbcType=INTEGER},
      </if>
      <if test="record.outInventory != null">
        out_inventory = #{record.outInventory,jdbcType=INTEGER},
      </if>
      <if test="record.materialCode != null">
        material_code = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodType != null">
        good_type = #{record.goodType,jdbcType=INTEGER},
      </if>
      <if test="record.fullTitle != null">
        full_title = #{record.fullTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.longCode != null">
        long_code = #{record.longCode,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      sort_id = #{record.sortId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      total_inventory = #{record.totalInventory,jdbcType=INTEGER},
      remnant_inventory = #{record.remnantInventory,jdbcType=INTEGER},
      out_inventory = #{record.outInventory,jdbcType=INTEGER},
      material_code = #{record.materialCode,jdbcType=VARCHAR},
      good_type = #{record.goodType,jdbcType=INTEGER},
      full_title = #{record.fullTitle,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      long_code = #{record.longCode,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      details = #{record.details,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      sort_id = #{record.sortId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      total_inventory = #{record.totalInventory,jdbcType=INTEGER},
      remnant_inventory = #{record.remnantInventory,jdbcType=INTEGER},
      out_inventory = #{record.outInventory,jdbcType=INTEGER},
      material_code = #{record.materialCode,jdbcType=VARCHAR},
      good_type = #{record.goodType,jdbcType=INTEGER},
      full_title = #{record.fullTitle,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      long_code = #{record.longCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lks.pojo.GoodsWithBLOBs">
    update goods
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        sort_id = #{sortId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNo != null">
        goods_no = #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalInventory != null">
        total_inventory = #{totalInventory,jdbcType=INTEGER},
      </if>
      <if test="remnantInventory != null">
        remnant_inventory = #{remnantInventory,jdbcType=INTEGER},
      </if>
      <if test="outInventory != null">
        out_inventory = #{outInventory,jdbcType=INTEGER},
      </if>
      <if test="materialCode != null">
        material_code = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null">
        good_type = #{goodType,jdbcType=INTEGER},
      </if>
      <if test="fullTitle != null">
        full_title = #{fullTitle,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="longCode != null">
        long_code = #{longCode,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lks.pojo.GoodsWithBLOBs">
    update goods
    set org_id = #{orgId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      sort_id = #{sortId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      goods_no = #{goodsNo,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      category_id = #{categoryId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      total_inventory = #{totalInventory,jdbcType=INTEGER},
      remnant_inventory = #{remnantInventory,jdbcType=INTEGER},
      out_inventory = #{outInventory,jdbcType=INTEGER},
      material_code = #{materialCode,jdbcType=VARCHAR},
      good_type = #{goodType,jdbcType=INTEGER},
      full_title = #{fullTitle,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      long_code = #{longCode,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      details = #{details,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lks.pojo.Goods">
    update goods
    set org_id = #{orgId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      sort_id = #{sortId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      goods_no = #{goodsNo,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      category_id = #{categoryId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      total_inventory = #{totalInventory,jdbcType=INTEGER},
      remnant_inventory = #{remnantInventory,jdbcType=INTEGER},
      out_inventory = #{outInventory,jdbcType=INTEGER},
      material_code = #{materialCode,jdbcType=VARCHAR},
      good_type = #{goodType,jdbcType=INTEGER},
      full_title = #{fullTitle,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=BIT},
      long_code = #{longCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>